<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.member">


	<resultMap type="com.edu.member.vo.MemberVo"
		id="memberResultMap">
		<id column="MEMBER_NO" property="memberNo" />
		<result column="MEMBER_AUTH" property="memberAuth" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="MEMBER_EMAIL" property="memberEmail" />
		<result column="MEMBER_PASSWORD" property="memberPassword" />
		<result column="MEMBER_DATE" property="memberCreDate"
			javaType="java.util.Date" />
	</resultMap>


	<select id="memberSelectList" parameterType="map" 
	resultMap="memberResultMap">
		SELECT M.MEMBER_NO, M.MEMBER_NAME, M.MEMBER_EMAIL, M.MEMBER_DATE
		FROM
		(SELECT ROWNUM AS RNUM, 
				MEMBER_NO,
				MEMBER_NAME,
				MEMBER_EMAIL,
				MEMBER_DATE
				FROM MEMBERS
		<choose>
			<when test="searchOption == 'memberNo'">
				WHERE MEMBER_NO LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchOption == 'memberName'">
				WHERE MEMBER_NAME LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchOption == 'memberEmail'">
				WHERE MEMBER_EMAIL LIKE '%'||#{keyword}||'%'
			</when>
		</choose>
		
		<choose>
<!-- 		controller : default value="noAscending" -->
			<when test="order == 'noAscending'">
				ORDER BY MEMBER_NO)M
			</when>
			<when test="order == 'noDescending'">
				ORDER BY MEMBER_NO DESC)M
			</when>
			<when test="order == 'nameAscending'">
				ORDER BY MEMBER_NAME)M
			</when>
			<when test="order == 'nameDescending'">
				ORDER BY MEMBER_NAME DESC)M
			</when>
			<otherwise>
				)M
			</otherwise>
		</choose>
		
		WHERE RNUM BETWEEN #{start} AND #{end}
		
	</select>
	
	<select id="memberSelectTotalCount" parameterType="map"
			resultType="int">
		SELECT COUNT(*)
		FROM MEMBERS
		
		<choose>
			<when test="searchOption == 'memberNo'">
				WHERE MEMBER_NO LIKE '%'||#{keyword}||'%'
				ORDER BY MEMBER_NO
			</when>
			<when test="searchOption == 'memberName'">
				WHERE MEMBER_NAME LIKE '%'||#{keyword}||'%'
				ORDER BY MEMBER_NAME
			</when>
			<when test="searchOption == 'memberEmail'">
				WHERE MEMBER_EMAIL LIKE '%'||#{keyword}||'%'
				ORDER BY MEMBER_EMAIL
			</when>
		</choose>
		
		
	</select>



	<select id="memberExist" parameterType="memberVo"
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_AUTH, MEMBER_EMAIL, MEMBER_NAME
		FROM MEMBERS
		WHERE MEMBER_EMAIL = #{memberEmail} AND MEMBER_PASSWORD = #{memberPassword}
	</select>

	
	
	<insert id="memberInsertOne" 
		parameterType="com.edu.member.vo.MemberVo">
		
		INSERT INTO MEMBERS
			(MEMBER_NO, MEMBER_AUTH, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_DATE)
		VALUES(MEMBER_NO_SEQ.NEXTVAL, 'U', #{memberEmail}, #{memberPassword},
				#{memberName}, SYSDATE)
	</insert>
	
	
	<update id="memberUpdateOne" parameterType="memberVo">
		UPDATE 	MEMBERS
		<set>
			<if test="memberName != ''">MEMBER_NAME = #{memberName},</if>
			<if test="memberEmail != ''">MEMBER_EMAIL = #{memberEmail},</if>
			<if test="memberPassword != ''">MEMBER_PASSWORD = #{memberPassword}</if>
		</set>
		WHERE 	MEMBER_NO = #{memberNo}
	</update>
	
	<select id="memberSelectOne" parameterType="int"
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NAME, MEMBER_EMAIL, MEMBER_DATE
		FROM MEMBERS
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<delete id="memberDeleteOne" parameterType="int">
		
		DELETE FROM MEMBERS
		WHERE MEMBER_NO = #{no}
		
	</delete>
	
	
	

</mapper>
